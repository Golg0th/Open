{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Liste des établissements\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Nom de l'établissement\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Adresse\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Recommandation\")])], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Recommandation à ajouter\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.rows, (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row[0]), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row[1]) + \", \" + _toDisplayString(row[3]) + \" \" + _toDisplayString(row[4]) + \", France\", 1 /* TEXT */), _hoisted_3]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","rows","row","index","key","_toDisplayString","_hoisted_3"],"sources":["/home/golgoth/JAM/Open/src/components/NancyPage.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Liste des établissements</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Nom de l'établissement</th>\n            <th>Adresse</th>\n            <th>Recommandation</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in rows\" :key=\"index\">\n            <td>{{ row[0] }}</td>\n            <td>{{ row[1] }}, {{ row[3] }} {{ row[4] }}, France</td>\n            <td>Recommandation à ajouter</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  <script>\n  export default {\n    \n    data() {\n      return {\n        rows: []\n      };\n    },\n    mounted() {\n      this.readCSV('filtered_data.csv');\n    },\n    methods: {\n      readCSV(file) {\n        const rawFile = new XMLHttpRequest();\n        rawFile.open('GET', file, true);\n        rawFile.onreadystatechange = () => {\n          if (rawFile.readyState === 4 && rawFile.status === 200) {\n            this.processCSV(rawFile.responseText);\n          }\n        };\n        rawFile.send(null);\n      },\n      processCSV(data) {\n        const rows = data.split('\\n');\n        const formattedRows = [];\n        for (let i = 1; i < rows.length; i++) {\n          const cells = rows[i].split(',');\n          if (cells.length >= 5) {\n            formattedRows.push(cells);\n          }\n        }\n        this.rows = formattedRows;\n      }\n    }\n  };\n  </script>\n  <style>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 8px;\n  }\n  th {\n    background-color: #f2f2f2;\n  }\n  </style>"],"mappings":";gCAEMA,mBAAA,CAAiC,YAA7B,0BAAwB;gCAE1BA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAA+B,YAA3B,wBAAsB,G,aAC1BA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAuB,YAAnB,gBAAc,E;gCAOlBA,mBAAA,CAAiC,YAA7B,0BAAwB;;uBAdpCC,mBAAA,CAkBM,cAjBJC,UAAiC,EACjCF,mBAAA,CAeQ,gBAdNG,UAMQ,EACRH,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKG,SAAA,QAhBfC,WAAA,CAYqCC,KAAA,CAAAC,IAAI,EAZzC,CAYsBC,GAAG,EAAEC,KAAK;yBAAtBR,mBAAA,CAIK;MAJ6BS,GAAG,EAAED;IAAK,IAC1CT,mBAAA,CAAqB,YAAAW,gBAAA,CAAdH,GAAG,qBACVR,mBAAA,CAAwD,YAAAW,gBAAA,CAAjDH,GAAG,OAAM,IAAE,GAAAG,gBAAA,CAAGH,GAAG,OAAM,GAAC,GAAAG,gBAAA,CAAGH,GAAG,OAAM,UAAQ,iBACnDI,UAAiC,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}