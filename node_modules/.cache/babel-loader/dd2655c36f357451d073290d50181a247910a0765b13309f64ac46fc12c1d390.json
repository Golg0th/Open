{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      rows: []\n    };\n  },\n  mounted() {\n    this.readCSV('filtered_data.csv');\n  },\n  methods: {\n    readCSV(file) {\n      const rawFile = new XMLHttpRequest();\n      rawFile.open('GET', file, true);\n      rawFile.onreadystatechange = () => {\n        if (rawFile.readyState === 4 && rawFile.status === 200) {\n          this.processCSV(rawFile.responseText);\n        }\n      };\n      rawFile.send(null);\n    },\n    processCSV(data) {\n      const rows = data.split('\\n');\n      const formattedRows = [];\n      for (let i = 1; i < rows.length; i++) {\n        const cells = rows[i].split(',');\n        if (cells.length >= 5) {\n          formattedRows.push(cells);\n        }\n      }\n      this.rows = formattedRows;\n    }\n  }\n};","map":{"version":3,"names":["data","rows","mounted","readCSV","methods","file","rawFile","XMLHttpRequest","open","onreadystatechange","readyState","status","processCSV","responseText","send","split","formattedRows","i","length","cells","push"],"sources":["/home/golgoth/JAM/Open/src/components/Nancy.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>Liste des établissements</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Nom de l'établissement</th>\n            <th>Adresse</th>\n            <th>Recommandation</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(row, index) in rows\" :key=\"index\">\n            <td>{{ row[0] }}</td>\n            <td>{{ row[1] }}, {{ row[3] }} {{ row[4] }}, France</td>\n            <td>Recommandation à ajouter</td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </template>\n  <script>\n  export default {\n    data() {\n      return {\n        rows: []\n      };\n    },\n    mounted() {\n      this.readCSV('filtered_data.csv');\n    },\n    methods: {\n      readCSV(file) {\n        const rawFile = new XMLHttpRequest();\n        rawFile.open('GET', file, true);\n        rawFile.onreadystatechange = () => {\n          if (rawFile.readyState === 4 && rawFile.status === 200) {\n            this.processCSV(rawFile.responseText);\n          }\n        };\n        rawFile.send(null);\n      },\n      processCSV(data) {\n        const rows = data.split('\\n');\n        const formattedRows = [];\n        for (let i = 1; i < rows.length; i++) {\n          const cells = rows[i].split(',');\n          if (cells.length >= 5) {\n            formattedRows.push(cells);\n          }\n        }\n        this.rows = formattedRows;\n      }\n    }\n  };\n  </script>\n  <style>\n  table {\n    width: 100%;\n    border-collapse: collapse;\n  }\n  th, td {\n    border: 1px solid #dddddd;\n    text-align: left;\n    padding: 8px;\n  }\n  th {\n    background-color: #f2f2f2;\n  }\n  </style>"],"mappings":";AAsBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC,mBAAmB,CAAC;EACnC,CAAC;EACDC,OAAO,EAAE;IACPD,OAAOA,CAACE,IAAI,EAAE;MACZ,MAAMC,OAAM,GAAI,IAAIC,cAAc,CAAC,CAAC;MACpCD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAEH,IAAI,EAAE,IAAI,CAAC;MAC/BC,OAAO,CAACG,kBAAiB,GAAI,MAAM;QACjC,IAAIH,OAAO,CAACI,UAAS,KAAM,KAAKJ,OAAO,CAACK,MAAK,KAAM,GAAG,EAAE;UACtD,IAAI,CAACC,UAAU,CAACN,OAAO,CAACO,YAAY,CAAC;QACvC;MACF,CAAC;MACDP,OAAO,CAACQ,IAAI,CAAC,IAAI,CAAC;IACpB,CAAC;IACDF,UAAUA,CAACZ,IAAI,EAAE;MACf,MAAMC,IAAG,GAAID,IAAI,CAACe,KAAK,CAAC,IAAI,CAAC;MAC7B,MAAMC,aAAY,GAAI,EAAE;MACxB,KAAK,IAAIC,CAAA,GAAI,CAAC,EAAEA,CAAA,GAAIhB,IAAI,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;QACpC,MAAME,KAAI,GAAIlB,IAAI,CAACgB,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;QAChC,IAAII,KAAK,CAACD,MAAK,IAAK,CAAC,EAAE;UACrBF,aAAa,CAACI,IAAI,CAACD,KAAK,CAAC;QAC3B;MACF;MACA,IAAI,CAAClB,IAAG,GAAIe,aAAa;IAC3B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}